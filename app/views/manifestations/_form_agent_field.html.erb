<script>
  var add_agent_select2options = {
    multiple: false,
    minimumInputLength: 1,
    width: "250px",
    placeholder: <%= raw t("agent.search_placeholder").to_json %>,
    formatNoMatches: function(term) {
      return "'" + term + "' " + <%= raw t("agent.search_nomatch").to_json %>;
    },
    formatSearching: function() {
      return <%= raw t("agent.search_searching").to_json %>;
    },
    formatInputTooShort: function(term, minLength){
      return <%= raw t("agent.search_placeholder").to_json %>;
    },
    ajax: {
      url: "/agents/search_name.json",
      dataType: 'json',
      data: function (term, page) {
          return {search_phrase: term,
          };
      },
      results: function (data, page) {
          return {results: data};
      },
    },
    initSelection: function(element, callback) {
      var id = $(element).val();
      if (id != "" && id == parseInt(id)) {
        $.ajax("/agents/search_name.json?agent_id=" + id, {
            dataType: "json"
       }).done(function(data) { callback(data); });
      }
      else{
        callback({ id: id, text: id });
      }
    },
    createSearchChoice: function(term, data) {
      if ($(data).filter(function() {
        return this.text.localeCompare(term)===0; }).length===0) {
        return {id:term, text:term};
      }
    },
  };
  $(document).ready(function() {
    $("#select2_creator,#select2_contributor,#select2_publisher").select2({
      multiple: false,
      minimumInputLength: 1,
      width: "250px",
      placeholder: <%= raw t("agent.search_placeholder").to_json %>,
      formatNoMatches: function(term) {
        return "'" + term + "' " + <%= raw t("agent.search_nomatch").to_json %>;
      },
      formatSearching: function() {
        return <%= raw t("agent.search_searching").to_json %>;
      },
      formatInputTooShort: function(term, minLength){
        return <%= raw t("agent.search_placeholder").to_json %>;
      },
      ajax: {
        url: "/agents/search_name.json",
        dataType: 'json',
        data: function (term, page) {
            return {search_phrase: term,
            };
        },
        results: function (data, page) {
            return {results: data};
        },
      },
      initSelection: function(element, callback) {
        var id = $(element).val();
        if (id != "") {
          $.ajax("/agents/search_name.json?agent_id=" + id, {
              dataType: "json"
         }).done(function(data) { callback(data); });
        }
      },
    });
/*
    $("#select2_new_creator, #select2_new_contributor, #select2_new_publisher").select2({
      multiple: false,
      minimumInputLength: 1,
      width: "250px",
      placeholder: <%= raw t("agent.search_placeholder").to_json %>,
      formatNoMatches: function(term) {
        return "'" + term + "' " + <%= raw t("agent.search_nomatch").to_json %>;
      },
      formatSearching: function() {
        return <%= raw t("agent.search_searching").to_json %>;
      },
      formatInputTooShort: function(term, minLength){
        return <%= raw t("agent.search_placeholder").to_json %>;
      },
      ajax: {
        url: "/agents/search_name.json",
        dataType: 'json',
        data: function (term, page) {
            return {search_phrase: term,
            };
        },
        results: function (data, page) {
            return {results: data};
        },
      },
      initSelection: function(element, callback) {
        var id = $(element).val();
        if (id != "" && id == parseInt(id)) {
          $.ajax("/agents/search_name.json?agent_id=" + id, {
              dataType: "json"
         }).done(function(data) { callback(data); });
        }
        else{
          callback({ id: id, text: id });
        }
      },
      createSearchChoice: function(term, data) {
        if ($(data).filter(function() {
          return this.text.localeCompare(term)===0; }).length===0) {
          return {id:term, text:term};
        }
      },
    });
*/
    $("#select2_new_creator, #select2_new_contributor, #select2_new_publisher").select2(select2options);

  });
  $(document).on("select2-selecting", "#select2_new_creator", function(e){
    var attribute_name = e.target.name
    var attribute_number = attribute_name.match(/\d+/);
    if(e.val == parseInt(e.val)){
        $("#creator_ids_" + attribute_number).val(e.object.id);
        $("#creator_full_names_" + attribute_number).val(e.object.text);
        $("#creator_full_name_transcriptions_" + attribute_number).val(e.object.full_name_transcription);
    }
    else{
        $("#creator_ids_" + attribute_number).val("");
        $("#creator_full_names_" + attribute_number).val(e.object.text);
    }
  });
</script>
<% if SystemConfiguration.get("add_only_exist_agent") %>
  <% select2_str = '_select2' %>
  <%= text_field :select2_agent, :id, :id => 'select2_hidden', :style => 'display: none;' %>
<% end %>

<% if SystemConfiguration.get("use_agent_type") %>
  <select id="select2_creator_types_hidden" style="display: none;">
    <%= raw @create_types.collect{ |r| ["<option alt='" + r.name + "', value='" + r.id.to_s + "'>" + r.display_name.localize + " (" + r.name + ")</option>"] } %>
  </select>
<% end %>
<script>
  var ItemField_creator = {
    currentNumber : <%= raw (@add_creators.blank? ? 1 : @add_creators.size).to_json %>,
    itemTemplate : ''
      + '<td><input type="button" value="+" onClick="ItemField_creator.add();" /></td>'
      + '<td><input type="button" value="-" onClick="ItemField_creator.remove(__count__);" /></td>',
    add : function () {
      var $clone = $('input[name="creator_agent_ids[0]"]').clone();
      $clone.attr('name','creator_agent_ids[' + this.currentNumber + ']');

      var $creator_types_clone = $("#creator_type_ids_0").clone();
      $creator_types_clone.attr('id', 'creator_type_ids_' + this.currentNumber);
      $creator_types_clone.attr('name', 'creator_type_ids[' + this.currentNumber + ']');

      var $creator_ids_clone = $("#creator_ids_0").clone();
      $creator_ids_clone.attr('id', 'creator_ids_' + this.currentNumber);
      $creator_ids_clone.attr('name', 'creator_ids[' + this.currentNumber + ']');
      $creator_ids_clone.attr('value', "");

      var $creator_full_names_clone = $("#creator_full_names_0").clone();
      $creator_full_names_clone.attr('id', 'creator_full_names_' + this.currentNumber);
      $creator_full_names_clone.attr('name', 'creator_full_names[' + this.currentNumber + ']');
      $creator_full_names_clone.attr('value', "");

      var $creator_full_name_transcriptions_clone = $("#creator_full_name_transcriptions_0").clone();
      $creator_full_name_transcriptions_clone.attr('id', 'creator_full_name_transcriptions_' + this.currentNumber);
      $creator_full_name_transcriptions_clone.attr('name', 'creator_full_name_transcriptions[' + this.currentNumber + ']');
      $creator_full_name_transcriptions_clone.val("");
      
      var $clone_field = $("<td/>");
      $clone_field.append($clone);
      $clone_field.append($creator_ids_clone);
      $clone_field.append($creator_full_names_clone);
      var $creator_types_clone_field = $("<td/>");
      $creator_types_clone_field.append($creator_types_clone);
      var $creator_full_name_transcriptions_clone_field = $("<td/>");
      $creator_full_name_transcriptions_clone_field.append($creator_full_name_transcriptions_clone);
      
      var $new_field = $("<tr/>").attr("id", "CF" + this.currentNumber);
      var newItem = this.itemTemplate.replace(/__count__/mg, this.currentNumber);
      $new_field.append($clone_field);
      $new_field.append($creator_full_name_transcriptions_clone_field);
      $new_field.append($creator_types_clone_field);
      $new_field.append(newItem);
      $("#creator_field > table > tbody").append($new_field);
      this.currentNumber += 1;
      $clone.select2(select2options);
      $clone.select2('val', '');
      $creator_types_clone.select2({
        width: "250px",
        matcher: function(term, text, opt) {
          return text.toUpperCase().indexOf(term.toUpperCase())==0
              || opt.attr("alt").toUpperCase().indexOf(term.toUpperCase())==0;
        }
      });
    },
    remove : function (div_num) {
      var field = document.getElementById('CF' + div_num);
      if(field != null){ field.parentNode.removeChild(field); }
    }
  }
  var ItemField_creator_select2 = {
    currentNumber : <%= raw (@add_creators.blank? ? 1 : @add_creators.size).to_json %>,
    itemTemplate : ''
//      <% if SystemConfiguration.get("use_agent_type") %>
//        + '<td><select id="creator_type_ids___count__" name="creator_type_ids[__count__]">'
//        + <%= raw @create_types.collect{ |t| ["<option value='" + t.id.to_s + "'>" + t.display_name.localize + "</option>"] }.to_json %>
//        + '</select></td>'
//      <% end %>
      + '<td><input type="button" value="+" onClick="ItemField_creator_select2.add();" /></td>'
      + '<td><input type="button" value="-" onClick="ItemField_creator_select2.remove(__count__);" /></td>',
    add : function () {
      var $clone = $("#select2_hidden").clone();
      $clone[0].id = 'select2_creator';
      $clone.show();
      $clone.attr('name','creator_ids[' + this.currentNumber + ']');
      var $creator_types_clone = $("#select2_creator_types_hidden").clone();
      $creator_types_clone[0].id = 'select2_creator_types';
      $creator_types_clone.show();
      $creator_types_clone.attr('name', 'creator_type_ids[' + this.currentNumber + ']');
      var $new_field = $("<tr/>").attr("id", "CF" + this.currentNumber);
      var newItem = this.itemTemplate.replace(/__count__/mg, this.currentNumber);
      var $clone_field = $("<td/>");
      $clone_field.append($clone);
      var $creator_types_clone_field = $("<td/>");
      $creator_types_clone_field.append($creator_types_clone);
      $new_field.append($clone_field);
      $new_field.append($creator_types_clone_field);
      $new_field.append(newItem);
      $("#creator_field > table > tbody").append($new_field);
      this.currentNumber += 1;
      $clone.select2({
        multiple: false,
        width: "250px",
        minimumInputLength: 1,
        placeholder: <%= raw t("agent.search_placeholder").to_json %>,
        formatNoMatches: function(term) {
          return "'" + term + "' " + <%= raw t("agent.search_nomatch").to_json %>;
        },
        formatSearching: function() {
          return <%= raw t("agent.search_searching").to_json %>;
        },
        formatInputTooShort: function(term, minLength){
          return <%= raw t("agent.search_placeholder").to_json %>;
        },
        ajax: {
          url: "/agents/search_name.json",
          dataType: 'json',
          data: function (term, page) {
            return {search_phrase: term,
            };
          },
          results: function (data, page) {
            return {results: data};
          },
        },
      });
      $creator_types_clone.select2({
        width: "250px",
        matcher: function(term, text, opt) {
          return text.toUpperCase().indexOf(term.toUpperCase())==0
              || opt.attr("alt").toUpperCase().indexOf(term.toUpperCase())==0;
        }
      });
    },
    remove : function (div_num) {
      var field = document.getElementById('CF' + div_num);
      if(field != null){ field.parentNode.removeChild(field); }
    }
  }
</script>

<div class="field">
  <strong><%= t('agent.creator') %></strong><br />
  <table id="bless">
  <% @creates.each_with_index do |create, i| %>
    <tr>
    <td><%= link_to create.agent.full_name, agent_path(create.agent_id), :target => ["_blank"] -%></td>
    <% if SystemConfiguration.get("use_agent_type") %>
      <td>
        <%#= select_tag "creates[#{create.agent_id}]",
            options_for_select(@create_types.collect{ |r| [r.display_name.localize, r.id] },
            :selected => create.create_type_id) %>
        <%= select2_script "creates_#{ create.agent_id }" %>
        <%= make_select2(
          "creates_#{ create.agent_id }", 
          "creates[#{ create.agent_id }]", 
          @create_types,
          create.create_type_id, 
          250, 
        ) %>
      </td>
    <% else %>
      <%= hidden_field_tag "creates[#{create.agent_id}]" %>
    <% end %>
    <td>
      <%= t('page.destroy') %>
      <%= check_box_tag 'del_creator_ids[]', create.agent_id.to_s, @del_creators.include?(create.agent_id.to_s), {} -%>
    </td>
    </tr>
  <% end %>
  </table>
</div>
<div id="creator_field" class="field">
  <table id="bless">
  <% @add_creators.each_with_index do |creator, i| %>
    <tr id="CF<%= i.to_s %>" >
      <% if SystemConfiguration.get("add_only_exist_agent") %>
        <td><%= text_field :creator_ids, i, :id => 'select2_creator', :value => creator[:agent_id] %></td>
      <% else %>
        <td>
          <%= text_field_tag "creator_agent_ids[#{i}]", (@add_creator_agent_ids.blank? ? nil : @add_creator_agent_ids[i.to_s]), :id => 'select2_new_creator', :placeholder => t("activerecord.attributes.agent.full_name") %>
          <%= hidden_field_tag "creator_ids[#{i}]", creator[:agent_id] %>
          <%= hidden_field_tag "creator_full_names[#{i}]", creator[:full_name] %>
        </td>
        <td>
          <%= text_field_tag "creator_full_name_transcriptions[#{i}]", creator[:full_name_transcription],
            :placeholder => t("activerecord.attributes.agent.full_name_transcription") %>
        </td>
      <% end %>
      <% if SystemConfiguration.get("use_agent_type") %>
        <td>
        <%#= select_tag "creator_type_ids[#{i}]",
          options_for_select(@create_types.collect{ |r| [r.display_name.localize, r.id] }, :selected => creator[:type_id]) %>
        <%= select2_script "creator_type_ids_#{i}" %>
        <%= make_select2(
          "creator_type_ids_#{i}", 
          "creator_type_ids[#{i}]", 
          @create_types,
          creator[:type_id], 
          250, 
        ) %>
        </td>
      <% end %>
      <td><%= button_to_function t('page.add_line'), "ItemField_creator#{select2_str}.add()" -%></td>
      <td><%= button_to_function t('page.del_line'), "ItemField_creator#{select2_str}.remove(#{i})" if i > 0 -%></td>
    </tr>
  <% end %>
  </table>
</div>

<% if SystemConfiguration.get("use_agent_type") %>
  <select id="select2_contributor_types_hidden" style="display: none;">
    <%= raw @realize_types.collect{ |r| ["<option alt='" + r.name + "', value='" + r.id.to_s + "'>" + r.display_name.localize + " (" + r.name + ")</option>"] } %>
  </select>
<% end %>
<script>
  var ItemField_contributor = {
    currentNumber : <%= raw (@add_contributors.blank? ? 1 : @add_contributors.size).to_json %>,
    itemTemplate : ''
      + '<td><input id="contributor_full_names___count__" name="contributor_full_names[__count__]" size="20" type="text" placeholder="<%= t("activerecord.attributes.agent.full_name") %>"></td>'
      + '<td><input id="contributor_full_name_transcriptions___count__" name="contributor_full_name_transcriptions[__count__]" size="20" type="text" placeholder="<%= t("activerecord.attributes.agent.full_name_transcription") %>"></td>'
      <% if SystemConfiguration.get("use_agent_type") %>
        + '<td><select id="contributor_type_ids___count__" name="contributor_type_ids[__count__]">'
        + <%= raw @realize_types.collect{ |r| ["<option value='" + r.id.to_s + "'>" + r.display_name.localize + "</option>"] }.join().to_json %>
        + '</select></td>'
      <% end %>
      + '<td><input type="button" value="+" onClick="ItemField_contributor.add();" /></td>'
      + '<td><input type="button" value="-" onClick="ItemField_contributor.remove(__count__);" /></td>',
    add : function () {
      var new_area = document.createElement("tr");
      new_area.setAttribute("id", "RF" + this.currentNumber);
      var newItem = this.itemTemplate.replace(/__count__/mg, this.currentNumber);
      new_area.innerHTML = newItem;
      $("#contributor_field > table > tbody").append(new_area);
      this.currentNumber += 1;
    },
    remove : function (div_num) {
      var field = document.getElementById('RF' + div_num);
      if(field != null){ field.parentNode.removeChild(field); }
    }
  }
  var ItemField_contributor_select2 = {
    currentNumber : <%= raw (@add_contributors.blank? ? 1 : @add_contributors.size).to_json %>,
    itemTemplate : ''
//      <% if SystemConfiguration.get("use_agent_type") %>
//        + '<td><select id="contributor_type_ids___count__" name="contributor_type_ids[__count__]">'
//        + <%= raw @realize_types.collect{ |t| ["<option value='" + t.id.to_s + "'>" + t.display_name.localize + "</option>"] }.to_json %>
//        + '</select></td>'
//      <% end %>
      + '<td><input type="button" value="+" onClick="ItemField_contributor_select2.add();" /></td>'
      + '<td><input type="button" value="-" onClick="ItemField_contributor_select2.remove(__count__);" /></td>',
    add : function () {
      var $clone = $("#select2_hidden").clone();
      $clone[0].id = 'select2_contributor';
      $clone.show();
      $clone.attr('name','contributor_ids[' + this.currentNumber + ']');
      var $contributor_types_clone = $("#select2_contributor_types_hidden").clone();
      $contributor_types_clone[0].id = 'select2_contributor_types';
      $contributor_types_clone.show();
      $contributor_types_clone.attr('name','contributor_type_ids[' + this.currentNumber + ']');
      var $new_field = $("<tr/>").attr("id", "RF" + this.currentNumber);
      var newItem = this.itemTemplate.replace(/__count__/mg, this.currentNumber);
      var $clone_field = $("<td/>");
      $clone_field.append($clone);
      var $contributor_types_clone_field = $("<td/>");
      $contributor_types_clone_field.append($contributor_types_clone);
      $new_field.append($clone_field);
      $new_field.append($contributor_types_clone_field);
      $new_field.append(newItem);
      $("#contributor_field > table > tbody").append($new_field);
      this.currentNumber += 1;
      $clone.select2({
        multiple: false,
        width: "250px",
        minimumInputLength: 1,
        placeholder: <%= raw t("agent.search_placeholder").to_json %>,
        formatNoMatches: function(term) {
          return "'" + term + "' " + <%= raw t("agent.search_nomatch").to_json %>;
        },
        formatSearching: function() {
          return <%= raw t("agent.search_searching").to_json %>;
        },
        formatInputTooShort: function(term, minLength){
          return <%= raw t("agent.search_placeholder").to_json %>;
        },
        ajax: {
          url: "/agents/search_name.json",
          dataType: 'json',
          data: function (term, page) {
            return {search_phrase: term,
            };
          },
          results: function (data, page) {
            return {results: data};
          },
        },
      });
      $contributor_types_clone.select2({
        width: "250px",
        matcher: function(term, text, opt) {
          return text.toUpperCase().indexOf(term.toUpperCase())==0
              || opt.attr("alt").toUpperCase().indexOf(term.toUpperCase())==0;
        }
      });
    },
    remove : function (div_num) {
      var field = document.getElementById('RF' + div_num);
      if(field != null){ field.parentNode.removeChild(field); }
    }
  }
</script>

<div class="field">
  <strong><%= t('agent.contributor') %></strong><br />
  <table id="bless">
  <% @realizes.each_with_index do |realize, i| %>
    <tr>
    <td><%= link_to realize.agent.full_name, agent_path(realize.agent_id), :target => ["_blank"] -%></td>
    <% if SystemConfiguration.get("use_agent_type") %>
      <td>
        <%#= select_tag "realizes[#{realize.agent_id}]",
            options_for_select(@realize_types.collect{ |r| [r.display_name.localize, r.id] },
            :selected => realize.realize_type_id) %>
        <%= select2_script "realizes_#{ realize.agent_id }" %>
        <%= make_select2(
          "realizes_#{ realize.agent_id }", 
          "realizes_[#{ realize.agent_id }]", 
          @realize_types,
          realize.realize_type_id, 
          250, 
        ) %>
      </td>
    <% else %>
      <%= hidden_field_tag "realizes[#{realize.agent_id}]" %>
    <% end %>
    <td>
      <%= t('page.destroy') %>
      <%= check_box_tag 'del_contributor_ids[]', realize.agent_id.to_s, @del_contributors.include?(realize.agent_id.to_s), {} -%>
    </td>
    </tr>
  <% end %>
  </table>
</div>
<div id="contributor_field" class="field">
  <table id="bless">
  <% @add_contributors.each_with_index do |contributor, i| %>
    <tr id="RF<%= i.to_s %>" >
      <% if SystemConfiguration.get("add_only_exist_agent") %>
        <td><%= text_field :contributor_ids, i, :id => 'select2_contributor', :value => contributor[:agent_id] %></td>
      <% else %>
        <td>
          <%= text_field_tag "contributor_full_names[#{i}]", contributor[:full_name],
            :placeholder => t("activerecord.attributes.agent.full_name") %>
        </td>
        <td>
          <%= text_field_tag "contributor_full_name_transcriptions[#{i}]", contributor[:full_name_transcription],
            :placeholder => t("activerecord.attributes.agent.full_name_transcription") %>
        </td>
      <% end %>
      <% if SystemConfiguration.get("use_agent_type") %>
        <td>
        <%#= select_tag "contributor_type_ids[#{i}]",
          options_for_select(@realize_types.collect{ |r| [r.display_name.localize, r.id] }, :selected => contributor[:type_id]) %>
        <%= select2_script "contributor_type_ids_#{i}" %>
        <%= make_select2(
          "contributor_type_ids_#{i}", 
          "contributor_type_ids[#{i}]", 
          @realize_types,
          contributor[:type_id], 
          250, 
        ) %>
        </td>
      <% end %>
      <td><%= button_to_function t('page.add_line'), "ItemField_contributor#{select2_str}.add()" -%></td>
      <td><%= button_to_function t('page.del_line'), "ItemField_contributor#{select2_str}.remove(#{i})" if i > 0 -%></td>
    </tr>
  <% end %>
  </table>
</div>

<% if SystemConfiguration.get("use_agent_type") %>
  <select id="select2_publisher_types_hidden" style="display: none;">
    <%= raw @produce_types.collect{ |r| ["<option alt='" + r.name + "', value='" + r.id.to_s + "'>" + r.display_name.localize + " (" + r.name + ")</option>"] } %>
  </select>
<% end %>
<script>
  var ItemField_publisher = {
    currentNumber : <%= raw (@add_publishers.blank? ? 1 : @add_publishers.size).to_json %>,
    itemTemplate : ''
      + '<td><input id="publisher_full_names___count__" name="publisher_full_names[__count__]" size="20" type="text" placeholder="<%= t("activerecord.attributes.agent.full_name") %>"></td>'
      + '<td><input id="publisher_full_name_transcriptions___count__" name="publisher_full_name_transcriptions[__count__]" size="20" type="text" placeholder="<%= t("activerecord.attributes.agent.full_name_transcription") %>"></td>'
      <% if SystemConfiguration.get("use_agent_type") %>
        + '<td><select id="publisher_type_ids___count__" name="publisher_type_ids[__count__]">'
        + <%= raw @produce_types.collect{ |r| ["<option value='" + r.id.to_s + "'>" + r.display_name.localize + "</option>"] }.join().to_json %>
        + '</select></td>'
      <% end %>
      + '<td><input type="button" value="+" onClick="ItemField_publisher.add();" /></td>'
      + '<td><input type="button" value="-" onClick="ItemField_publisher.remove(__count__);" /></td>',
    add : function () {
      var new_area = document.createElement("tr");
      new_area.setAttribute("id", "PF" + this.currentNumber);
      var newItem = this.itemTemplate.replace(/__count__/mg, this.currentNumber);
      new_area.innerHTML = newItem;
      $("#publisher_field > table > tbody").append(new_area);
      this.currentNumber += 1;
    },
    remove : function (div_num) {
      var field = document.getElementById('PF' + div_num);
      if(field != null){ field.parentNode.removeChild(field); }
    }
  }
  var ItemField_publisher_select2 = {
    currentNumber : <%= raw (@add_publishers.blank? ? 1 : @add_publishers.size).to_json %>,
    itemTemplate : ''
//      <% if SystemConfiguration.get("use_agent_type") %>
//        + '<td><select id="publisher_type_ids___count__" name="publisher_type_ids[__count__]">'
//        + <%= raw @produce_types.collect{ |t| ["<option value='" + t.id.to_s + "'>" + t.display_name.localize + "</option>"] }.to_json %>
//        + '</select></td>'
//      <% end %>
      + '<td><input type="button" value="+" onClick="ItemField_publisher_select2.add();" /></td>'
      + '<td><input type="button" value="-" onClick="ItemField_publisher_select2.remove(__count__);" /></td>',
    add : function () {
      var $clone = $("#select2_hidden").clone();
      $clone[0].id = 'select2_publisher';
      $clone.show();
      $clone.attr('name','publisher_ids[' + this.currentNumber + ']');
      var $publisher_types_clone = $("#select2_publisher_types_hidden").clone();
      $publisher_types_clone[0].id = 'select2_publisher_types';
      $publisher_types_clone.show();
      $publisher_types_clone.attr('name','publisher_type_ids[' + this.currentNumber + ']');
      var $new_field = $("<tr/>").attr("id", "PF" + this.currentNumber);
      var newItem = this.itemTemplate.replace(/__count__/mg, this.currentNumber);
      var $clone_field = $("<td/>");
      $clone_field.append($clone);
      var $publisher_types_clone_field = $("<td/>");
      $publisher_types_clone_field.append($publisher_types_clone);
      $new_field.append($clone_field);
      $new_field.append($publisher_types_clone_field);
      $new_field.append(newItem);
      $("#publisher_field > table > tbody").append($new_field);
      this.currentNumber += 1;
      $clone.select2({
        multiple: false,
        width: "250px",
        minimumInputLength: 1,
        placeholder: <%= raw t("agent.search_placeholder").to_json %>,
        formatNoMatches: function(term) {
          return "'" + term + "' " + <%= raw t("agent.search_nomatch").to_json %>;
        },
        formatSearching: function() {
          return <%= raw t("agent.search_searching").to_json %>;
        },
        formatInputTooShort: function(term, minLength){
          return <%= raw t("agent.search_placeholder").to_json %>;
        },
        ajax: {
          url: "/agents/search_name.json",
          dataType: 'json',
          data: function (term, page) {
            return {search_phrase: term,
            };
          },
          results: function (data, page) {
            return {results: data};
          },
        },
      });
      $publisher_types_clone.select2({
        width: "250px",
        matcher: function(term, text, opt) {
          return text.toUpperCase().indexOf(term.toUpperCase())==0
              || opt.attr("alt").toUpperCase().indexOf(term.toUpperCase())==0;
        }
      });
    },
    remove : function (div_num) {
      var field = document.getElementById('PF' + div_num);
      if(field != null){ field.parentNode.removeChild(field); }
    }
  }
</script>

<div class="field">
  <strong><%= t('agent.publisher') %></strong><br />
  <table id="bless">
  <% @produces.each_with_index do |produce, i| %>
    <tr>
    <td><%= link_to produce.agent.full_name, agent_path(produce.agent_id), :target => ["_blank"] -%></td>
    <% if SystemConfiguration.get("use_agent_type") %>
      <td>
        <%#= select_tag "produces[#{produce.agent_id}]",
            options_for_select(@produce_types.collect{ |r| [r.display_name.localize, r.id] },
            :selected => produce.produce_type_id) %>
        <%= select2_script "produces_#{produce.agent_id}" %>
        <%= make_select2(
          "produces_#{produce.agent_id}", 
          "produces[#{produce.agent_id}]", 
          @produce_types,
          produce.produce_type_id, 
          250, 
        ) %>
      </td>
    <% else %>
      <%= hidden_field_tag "produces[#{produce.agent_id}]" %>
    <% end %>
    <td>
      <%= t('page.destroy') %>
      <%= check_box_tag 'del_publisher_ids[]', produce.agent_id.to_s, @del_publishers.include?(produce.agent_id.to_s), {} -%>
    </td>
    </tr>
  <% end %>
  </table>
</div>
<div id="publisher_field" class="field">
  <table id="bless">
  <% @add_publishers.each_with_index do |publisher, i| %>
    <tr id="PF<%= i.to_s %>" >
      <% if SystemConfiguration.get("add_only_exist_agent") %>
        <td><%= text_field :publisher_ids, i, :id => 'select2_publisher', :value => publisher[:agent_id] %></td>
      <% else %>
        <td>
          <%= text_field_tag "publisher_full_names[#{i}]", publisher[:full_name],
            :placeholder => t("activerecord.attributes.agent.full_name") %>
        </td>
        <td>
          <%= text_field_tag "publisher_full_name_transcriptions[#{i}]", publisher[:full_name_transcription],
            :placeholder => t("activerecord.attributes.agent.full_name_transcription") %>
        </td>
      <% end %>
      <% if SystemConfiguration.get("use_agent_type") %>
        <td>
        <%#= select_tag "publisher_type_ids[#{i}]",
          options_for_select(@produce_types.collect{ |r| [r.display_name.localize, r.id] }, :selected => publisher[:type_id]) %>
        <%= select2_script "publisher_type_ids_#{i}" %>
        <%= make_select2(
          "publisher_type_ids_#{i}", 
          "publisher_type_ids[#{i}]", 
          @produce_types,
          publisher[:type_id], 
          250, 
        ) %>
        </td>
      <% end %>
      <td><%= button_to_function t('page.add_line'), "ItemField_publisher#{select2_str}.add()" -%></td>
      <td><%= button_to_function t('page.del_line'), "ItemField_publisher#{select2_str}.remove(#{i})" if i > 0 -%></td>
    </tr>
  <% end %>
  </table>
</div>
